<Activity mc:Ignorable="sap sap2010" x:Class="factura_a_dic___dt" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_diccDatosFormasMedicas" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="out_dtLineasCMS1500" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_dtDatos" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <this:factura_a_dic___dt.in_dtDatos>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:factura_a_dic___dt.in_dtDatos>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1143,20214</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>factura_a_dic___dt_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>NovigoSolutions.TransposeDataTable.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Softbotic.ImageAligner.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="82">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NovigoSolutions.TransposeDataTable.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Softbotic.ImageAligner.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="factura_a_dic___dt" sap:VirtualizedContainerService.HintSize="1153,20149" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strFechadesde" />
      <Variable x:TypeArguments="x:String" Name="strPlaceOfService" />
      <Variable x:TypeArguments="x:String" Name="strCPT_HCPCS" />
      <Variable x:TypeArguments="x:String" Name="strDays_Or_Units" />
      <Variable x:TypeArguments="x:String" Name="strcargo" />
      <Variable x:TypeArguments="x:Int32" Name="intPaginas" />
      <Variable x:TypeArguments="x:String" Name="strModifiers1" />
      <Variable x:TypeArguments="x:String" Name="strModifiers2" />
      <Variable x:TypeArguments="x:String" Name="strModifiers3" />
      <Variable x:TypeArguments="x:String" Name="strModifiers4" />
      <Variable x:TypeArguments="x:String" Name="NamePatient" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1105,122" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;extraccion y filtrado datos extraidos por ocr&quot;]" />
    <ui:BuildDataTable DataTable="[out_dtLineasCMS1500]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1105,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Fecha_x0020_desde&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Fecha_x0020_hasta&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Place_x0020_of_x0020_service&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CPT_x002F_HCPCS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Modifier1&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Modifier2&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Modifier3&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Modifier4&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Days_x0020_Or_x0020_Units&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;cargo&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <Assign sap:VirtualizedContainerService.HintSize="1105,88" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_diccDatosFormasMedicas]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[New Dictionary(of String, string)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each columna" sap:VirtualizedContainerService.HintSize="1105,790" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_dtDatos.Columns]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="sd:DataColumn">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="columna" />
          </ActivityAction.Argument>
          <Sequence DisplayName="llenado de dictionary" sap:VirtualizedContainerService.HintSize="532,658" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strKeyValue" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[columna.ColumnName.Contains(&quot;Fecha&quot;)]" sap:VirtualizedContainerService.HintSize="484,324" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="416,119" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Break sap:VirtualizedContainerService.HintSize="368,25" sap2010:WorkflowViewState.IdRef="Break_2" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strKeyValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(0).Item(columna.ColumnName).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="484,88" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas(columna.ColumnName)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strKeyValue]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Sequence DisplayName="limpieza diccionario" sap:VirtualizedContainerService.HintSize="1105,11020" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="salidadedatosindured" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="limpieza de espacios" sap:VirtualizedContainerService.HintSize="1057,2130" sap2010:WorkflowViewState.IdRef="Sequence_36">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="arrStrTextoALimpiar" />
          <Variable x:TypeArguments="x:String" Name="codigoposible" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_53">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Account").Split({"NO. "},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_130">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({" NO "},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_131">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"NT NO"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_132">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"'S NO"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_133">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"PATIENT'S"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_134">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"PATIENTS"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_148">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"ACCOUNT"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="paccient account" sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_149">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"OUNT"},nothing).Last]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_82">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Replace("27.","")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_77">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"32."},NOTHING).First.ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_103">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"SERVICE"},NOTHING).First.ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_145">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Replace("26.","")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_146">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Replace("6.","")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="1009,88" sap2010:WorkflowViewState.IdRef="Assign_83">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[codigoposible]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar.Split({"X"},nothing).First]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[codigoposible.Length&lt;8]" sap:VirtualizedContainerService.HintSize="1009,353" sap2010:WorkflowViewState.IdRef="If_26">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_56">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_54">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Account")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[arrStrTextoALimpiar]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_57">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_84">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Account")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[codigoposible]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Assign sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_94">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Account")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Account").Replace(" ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Billing provider"),".[^a-z A-Z]","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_65">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({" PH "},nothing).Last.ToString.Split({"PO"},nothing).First.ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_102">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({"PH)"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_101">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({"PH "},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_120">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({"P.O"},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_121">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({"BOX"},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign billing provider" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_126">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Billing provider").Split({"BILLING PROVIDER INFO"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign federal tax" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Federal Tax"),"\D","").Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign federal tax" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_66">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Federal Tax"),"^25","").Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign federal tax" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_79">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Federal Tax"),"31$","").Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="695,287" sap2010:WorkflowViewState.IdRef="TryCatch_3">
        <TryCatch.Try>
          <Assign DisplayName="Assign federal tax" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_155">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax").Substring(0,9)]</InArgument>
            </Assign.Value>
          </Assign>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Assign DisplayName="Assign federal tax" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_171">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Federal Tax")]</InArgument>
                </Assign.Value>
              </Assign>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <Assign DisplayName="Assign Signature" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_67">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature").Split({"thereof"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Signature" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_95">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature").Split({"SIGNED"},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Signature" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_71">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Signature"),"\-*\+*\.*\^*:*,*\(*\)*","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Signature" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_122">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Signature"),"[0-9*]","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Signature" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_191">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Signature").Replace("/","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_72">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total").Split({"CHARGE"},Nothing).Last.ToString.Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_73">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total").Replace("29. ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_86">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total").Replace("33. ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_85">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total").Replace(" ",".")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_87">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total").Replace(":",".")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Cargo Total" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_68">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Cargo Total")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(out_diccDatosFormasMedicas("Cargo Total"),"[0-9]+([,][0-9]+)?([.][0-9]{2})?").ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Insured ID" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_80">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_diccDatosFormasMedicas("Insured ID"),"18.","").Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Insured ID" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID").Replace("4.","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Insured ID" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_104">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID").Replace("1a","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Insured ID" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_137">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID").Replace("1a","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Insured ID" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_135">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[salidadedatosindured]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[out_diccDatosFormasMedicas("Insured ID").Split({" "},nothing)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="695,51" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[salidadedatosindured]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="insured" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,764" sap2010:WorkflowViewState.IdRef="Sequence_68">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="EncontroID" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="insured id" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_142">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[insured]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[insured.Replace("-","").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="insured id" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_143">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[insured]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[insured.Split({"/"},nothing).First.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="insured id" sap:VirtualizedContainerService.HintSize="653,60" sap2010:WorkflowViewState.IdRef="Assign_139">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[EncontroID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">[System.Text.RegularExpressions.Regex.IsMatch(insured,"^[a-zA-Z]*[0-9]{3,12}[a-zA-Z]*")]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[EncontroID]" sap:VirtualizedContainerService.HintSize="653,372" sap2010:WorkflowViewState.IdRef="If_31">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="insured id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_140">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(insured,"^[a-zA-Z]*[0-9]{3,12}[a-zA-Z]*").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_3" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="insured id" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_141">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Insured ID")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEach>
      <If Condition="[string.IsNullOrEmpty(out_diccDatosFormasMedicas(&quot;Insured ID&quot;))]" sap:VirtualizedContainerService.HintSize="695,301" sap2010:WorkflowViewState.IdRef="If_32">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_71">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Throw Exception="[new BusinessRuleException(&quot;No se encontró insured ID&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_72">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_70">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Name").Split({"5."},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_96">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"Initial)"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_97">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"Initial"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_99">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"Last Name"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_100">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"First Name"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_147">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"initial)"},nothing).Last]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_98">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Replace("3.","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_153">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"6."},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_190">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient.Split({"5."},nothing).First]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[NamePatient.Split({&quot;PATIENT&quot;},nothing).First.ToString.Length&lt;5]" sap:VirtualizedContainerService.HintSize="1057,353" sap2010:WorkflowViewState.IdRef="If_41">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_93">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_189">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[NamePatient.Replace("PATIENT'S","")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_94">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_154">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[NamePatient]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[NamePatient.Split({"PATIENT"},nothing).First]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign Pantien name" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_152">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Pacient Name")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[NamePatient]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_105">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A").Replace("DIAGNOSIS","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_106">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A").Replace("OR ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_107">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A").Replace("NATURE","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_192">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A").Replace(" B","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_88">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis A").Replace(" ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[out_diccDatosFormasMedicas(&quot;Diagnosis A&quot;).Length&lt;3]" sap:VirtualizedContainerService.HintSize="1057,324" sap2010:WorkflowViewState.IdRef="If_37">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="416,119" sap2010:WorkflowViewState.IdRef="Sequence_85">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Throw Exception="[new BusinessRuleException(&quot;No se puedo extraer datos de diagnostico&quot;)]" sap:VirtualizedContainerService.HintSize="368,25" sap2010:WorkflowViewState.IdRef="Throw_6" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign diagnosis b" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_109">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B").Replace("ILLNESS","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis b" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_108">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B").Replace("OR ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis b" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_110">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B").Replace("INJURY","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis b" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_193">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B").Replace(" C","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis b" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_89">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B").Replace(" ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[out_diccDatosFormasMedicas(&quot;Diagnosis B&quot;).Length&lt;3]" sap:VirtualizedContainerService.HintSize="1057,387" sap2010:WorkflowViewState.IdRef="If_38">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_87">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_179">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis B")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_88">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_90">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace("service","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_111">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace("line","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_112">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace("below","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_113">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace("(24E)","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_194">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace(" D","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign diagnosis c" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_114">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C").Replace(" ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[out_diccDatosFormasMedicas(&quot;Diagnosis C&quot;).Length&lt;3]" sap:VirtualizedContainerService.HintSize="1057,387" sap2010:WorkflowViewState.IdRef="If_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_89">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_182">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis C")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_90">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Assign diagnosis d" sap:VirtualizedContainerService.HintSize="1057,88" sap2010:WorkflowViewState.IdRef="Assign_91">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis D")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis D").Replace(" ","")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[out_diccDatosFormasMedicas(&quot;Diagnosis D&quot;).Length&lt;3]" sap:VirtualizedContainerService.HintSize="1057,387" sap2010:WorkflowViewState.IdRef="If_40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_91">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign diagnosis a" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_185">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_diccDatosFormasMedicas("Diagnosis D")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_92">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each linea" sap:VirtualizedContainerService.HintSize="1105,6896" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Enumerable.Range(1,6)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Int32">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="961,6764" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strIndice" />
              <Variable x:TypeArguments="x:String" Name="strFechaHasta" />
              <Variable x:TypeArguments="s:String[]" Name="ArraModificador" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strIndice]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[if(item=1,"",item.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strcargo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"cargo").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_92">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strcargo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strcargo.Replace("28. ","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_93">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strcargo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strcargo,"\D","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[not strcargo.Contains(&quot;.&quot;)]" sap:VirtualizedContainerService.HintSize="913,387" sap2010:WorkflowViewState.IdRef="If_28">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="482,182" sap2010:WorkflowViewState.IdRef="Sequence_63">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_127">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strcargo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(strcargo.Length&gt;2,strcargo.Insert(strCargo.Length-2,"."),strCargo)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_115">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strCPT_HCPCS]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_dtDatos.Rows(intPaginas).Item(strIndice+"CPT/HCPCS").ToString,"[^a-z A-Z 0-9]","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strCPT_HCPCS]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[strCPT_HCPCS.Split({" "},nothing).Last]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_175">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strCPT_HCPCS]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Regex.Match(strCPT_HCPCS,"[a-zA-Z]{0,2}[0-9]{3,5}[a-zA-Z]{0,2}").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="913,341" sap2010:WorkflowViewState.IdRef="TryCatch_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch.Try>
                <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_156">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strCPT_HCPCS]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strCPT_HCPCS.Substring(0,5)]</InArgument>
                  </Assign.Value>
                </Assign>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,26" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_31">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strModifiers1]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_dtDatos.Rows(intPaginas).Item(strIndice+"Modifier1").ToString,"[^a-z A-Z 0-9]","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_157">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[ArraModificador]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[strModifiers1.Split({" "},nothing)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[ArraModificador]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,464" sap2010:WorkflowViewState.IdRef="Sequence_73">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not item.Length&lt;&gt;2]" sap:VirtualizedContainerService.HintSize="653,372" sap2010:WorkflowViewState.IdRef="If_33">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_74">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_159">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers1]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_75">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_161">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers1]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_32">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strModifiers2]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_dtDatos.Rows(intPaginas).Item(strIndice+"Modifier2").ToString,"[^a-z A-Z 0-9]","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_162">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[ArraModificador]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[strModifiers2.Split({" "},nothing)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[ArraModificador]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,464" sap2010:WorkflowViewState.IdRef="Sequence_78">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not item.Length&lt;&gt;2]" sap:VirtualizedContainerService.HintSize="653,372" sap2010:WorkflowViewState.IdRef="If_34">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_76">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_163">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_77">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_164">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_33">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strModifiers3]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_dtDatos.Rows(intPaginas).Item(strIndice+"Modifier3").ToString,"[^a-z A-Z 0-9]","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_165">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[ArraModificador]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[strModifiers3.Split({" "},nothing)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[ArraModificador]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,464" sap2010:WorkflowViewState.IdRef="Sequence_81">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not item.Length&lt;&gt;2]" sap:VirtualizedContainerService.HintSize="653,372" sap2010:WorkflowViewState.IdRef="If_35">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_79">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_166">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers3]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_6" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_80">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_167">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers3]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_34">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strModifiers4]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(in_dtDatos.Rows(intPaginas).Item(strIndice+"Modifier4").ToString,"[^a-z A-Z 0-9]","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_168">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[ArraModificador]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[strModifiers4.Split({" "},nothing)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[ArraModificador]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="695,464" sap2010:WorkflowViewState.IdRef="Sequence_84">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not item.Length&lt;&gt;2]" sap:VirtualizedContainerService.HintSize="653,372" sap2010:WorkflowViewState.IdRef="If_36">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_82">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_169">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers4]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[item.Substring(0,2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_7" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_83">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_170">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strModifiers4]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[strModifiers3.Contains(&quot;ACCEPT&quot;) or strModifiers4.Contains(&quot;ACCEPT&quot;) or strModifiers3.Contains(&quot;27.&quot;)]" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_61">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_125">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strcargo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDays_Or_Units]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"Days Or Units").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_27">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strDays_Or_Units]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strDays_Or_Units,"\D","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"Fecha desde").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_24">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaDesde,"[0-9]{3-5}","").trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_117">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaDesde," ","").trim]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_123">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechadesde,"\D","")]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[strFechadesde.Length &gt; 6]" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_60">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strFechadesde.Remove(0,strFechadesde.Length-6)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[strFechadesde.Length &gt; 2]" sap:VirtualizedContainerService.HintSize="913,724" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="568,519" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Enumerable.Range(0,strFechadesde.Length).Reverse]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="532,387" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[item mod 2 = 0 and not item=0]" sap:VirtualizedContainerService.HintSize="484,293" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_28">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFechadesde]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strFechadesde.Insert(item,"/")]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[in_dtDatos.Rows(intPaginas).Item(strIndice+&quot;Fecha hasta&quot;).ToString.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="913,259" sap2010:WorkflowViewState.IdRef="If_15">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_52">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"Fecha desde").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"Fecha hasta").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Sequence sap:VirtualizedContainerService.HintSize="913,545" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaHasta,"\D","").trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_118">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaHasta,"[0-9]{3-5}","").trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_119">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaHasta," ","").trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="Assign_124">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strFechaHasta,"\D","")]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <If Condition="[strFechaHasta.Length &gt; 6]" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strFechaHasta.Remove(0,strFechaHasta.Length-6)]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[strFechaHasta.Length &gt; 2]" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,463" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[Enumerable.Range(0,strFechaHasta.Length).Reverse]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Int32">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="526,339" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[item mod 2 = 0 and not item=0]" sap:VirtualizedContainerService.HintSize="484,247" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFechaHasta]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strFechaHasta.Insert(item,"/")]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="913,371" sap2010:WorkflowViewState.IdRef="TryCatch_5">
              <TryCatch.Try>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke predictor de fechas workflow" sap:VirtualizedContainerService.HintSize="379,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="backend\predictor de fechas.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="strFechaHasta">[strFechaHasta]</InOutArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="strFechadesde">[strFechadesde]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,26" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <If Condition="[not strFechadesde.Equals(&quot;&quot;)]" DisplayName="if resultado fecha desde" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,318" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <TryCatch.Try>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;la fecha desde es: &quot;+CDate(strFechadesde).ToString]" />
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,192" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw Exception="[new BusinessRuleException(&quot;Formato de Fecha no valido, especifiacion: &quot;+exception.Message)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[not strFechaHasta.Equals(&quot;&quot;)]" DisplayName="if resultado fecha hasta" sap:VirtualizedContainerService.HintSize="913,57" sap2010:WorkflowViewState.IdRef="If_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,318" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;la fecha hasta es: &quot;+CDate(strFechaHasta).ToString]" />
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,144" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw Exception="[new BusinessRuleException(&quot;Formato de Fecha no valido, especifiacion: &quot;+exception.Message)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strPlaceOfService]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dtDatos.Rows(intPaginas).Item(strIndice+"Place of service").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="913,88" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strPlaceOfService]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(strPlaceOfService,"\D","").Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{strFechadesde,strFechaHasta,strPlaceOfService,strCPT_HCPCS,strModifiers1,strModifiers2,strModifiers3,strModifiers4,strDays_Or_Units,strcargo}]" DataTable="[out_dtLineasCMS1500]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="913,201" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:FilterDataTable DataTable="[out_dtLineasCMS1500]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1105,171" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[out_dtLineasCMS1500]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["cargo"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <ui:FilterDataTable DataTable="[out_dtLineasCMS1500]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="1105,171" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[out_dtLineasCMS1500]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
            <ui:FilterOperationArgument.Column>
              <InArgument x:TypeArguments="x:String">["CPT/HCPCS"]</InArgument>
            </ui:FilterOperationArgument.Column>
          </ui:FilterOperationArgument>
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
    </ui:FilterDataTable>
    <If Condition="[out_dtLineasCMS1500.Rows.Count &lt; 1]" sap:VirtualizedContainerService.HintSize="1105,324" sap2010:WorkflowViewState.IdRef="If_19">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="416,119" sap2010:WorkflowViewState.IdRef="Sequence_42">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[new BusinessRuleException(&quot;La factura fue rechazada por falta de información o fallas en la Extracción de datos&quot;)]" sap:VirtualizedContainerService.HintSize="368,25" sap2010:WorkflowViewState.IdRef="Throw_4" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_43">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1105,122" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Fin limpieza de datos&quot;]" />
  </Sequence>
</Activity>